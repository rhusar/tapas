package org.drools.planner.examples.curriculumcourse.solver;

dialect "java"

import org.drools.planner.core.score.calculator.HardAndSoftConstraintScoreCalculator;
import org.drools.planner.core.score.constraint.IntConstraintOccurrence;
import org.drools.planner.core.score.constraint.ConstraintType;
import org.drools.planner.core.score.calculator.SimpleScoreCalculator;
import org.drools.planner.core.score.constraint.UnweightedConstraintOccurrence;

import com.radoslavhusar.tapas.ejb.entity.Task
import com.radoslavhusar.tapas.ejb.entity.Resource

global SimpleScoreCalculator scoreCalculator;

rule "insertResourceAssignmentTotal"
        salience 1 // Do these rules first (optional, for performance)
    when
    	/*Task(
         $resource : resource
      )*/

      $resource : Resource
    	
    	$assignmentTotal : Number() from accumulate(
            $task : Task(resource == $resource),
            count($task)
        )
    then
        insertLogical(new IntConstraintOccurrence("insertResourceAssignmentTotal", ConstraintType.NEGATIVE_SOFT,
                $assignmentTotal.intValue()));
end


// Accumulate soft constraints
rule "softConstraintsBroken"
        salience -1 // Do the other rules first (optional, for performance)
    when
        $softTotal : Number() from accumulate(
            IntConstraintOccurrence(constraintType == ConstraintType.NEGATIVE_SOFT, $weight : weight),
            sum($weight)
        )
    then
        scoreCalculator.setScore($softTotal.intValue());
end



/*
global HardAndSoftConstraintScoreCalculator scoreCalculator;

// ############################################################################
// Hard constraints
// ############################################################################



// ############################################################################
// Soft constraints
// ############################################################################

// ############################################################################
// Calculate score
// ############################################################################

// Accumulate hard constraints
rule "hardConstraintsBroken"
        salience -1 // Do the other rules first (optional, for performance)
    when
        $hardTotal : Number() from accumulate(
            IntConstraintOccurrence(constraintType == ConstraintType.NEGATIVE_HARD, $weight : weight),
            sum($weight) // Vote for http://jira.jboss.com/jira/browse/JBRULES-1075
        )
    then
        scoreCalculator.setHardConstraintsBroken($hardTotal.intValue());
end

// Accumulate soft constraints
rule "softConstraintsBroken"
        salience -1 // Do the other rules first (optional, for performance)
    when
        $softTotal : Number() from accumulate(
            IntConstraintOccurrence(constraintType == ConstraintType.NEGATIVE_SOFT, $weight : weight),
            sum($weight) // Vote for http://jira.jboss.com/jira/browse/JBRULES-1075
        )
    then
        scoreCalculator.setSoftConstraintsBroken($softTotal.intValue());
end
*/


